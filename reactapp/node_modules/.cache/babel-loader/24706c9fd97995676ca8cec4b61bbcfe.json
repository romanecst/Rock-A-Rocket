{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/romanecastera/lacapsule/rockarocket/reactapp/src/Pages/Pay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { set } from 'mongoose';\nconst stripePromise = loadStripe('pk_test_51HfQFACHHl93Y5PiikCQkm8axeZ7jnK9A00dlk15nvLMz29O2p2hU6mAhD0fBqAdnMukCTa5rIJlgiHHgAxBQLF200UoWuTYvv');\n\nfunction Checkout(props) {\n  _s();\n\n  const [redir, setRedir] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 38\n  }, this));\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  const CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        iconColor: '#0275d8',\n        color: 'black',\n        fontWeight: 500,\n        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n        fontSize: '18px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n          color: '#fce883'\n        },\n        '::placeholder': {\n          color: '#0275d8'\n        }\n      },\n      invalid: {\n        iconColor: '#d9534f',\n        color: '#d9534f'\n      }\n    }\n  };\n\n  if (props.token) {}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 18,\n        color: '#0275d8'\n      },\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUsername(e.target.value),\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 18,\n        color: '#0275d8',\n        paddingTop: 5\n      },\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n      options: CARD_OPTIONS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 13,\n        cursor: 'pointer',\n        color: '#0275d8',\n        marginTop: 20\n      },\n      onClick: () => setRedir( /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/sign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 107\n      }, this)),\n      children: \"Sign in/ Sign up here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), redir]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Checkout, \"Kypy3Ou7zAg8RTHEHAAz69v5XXU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Checkout;\n;\n\nfunction Pay(props) {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(Checkout, {\n      token: props.token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Pay;\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token\n  };\n}\n\nexport default connect(mapStateToProps, null)(Pay);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkout\");\n$RefreshReg$(_c2, \"Pay\");","map":{"version":3,"sources":["/Users/romanecastera/lacapsule/rockarocket/reactapp/src/Pages/Pay.js"],"names":["React","useState","useEffect","Elements","CardElement","useStripe","useElements","loadStripe","Button","InputGroup","InputGroupAddon","InputGroupText","Input","Redirect","set","stripePromise","Checkout","props","redir","setRedir","username","setUsername","email","setEmail","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","token","e","target","value","paddingTop","cursor","marginTop","Pay","mapStateToProps","state","connect"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport {Elements, CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {\n  Button,InputGroup, InputGroupAddon, InputGroupText, Input\n} from 'reactstrap';\n\nimport { Redirect } from 'react-router-dom';\nimport { set } from 'mongoose';\n\n\nconst stripePromise = loadStripe('pk_test_51HfQFACHHl93Y5PiikCQkm8axeZ7jnK9A00dlk15nvLMz29O2p2hU6mAhD0fBqAdnMukCTa5rIJlgiHHgAxBQLF200UoWuTYvv');\n\nfunction Checkout(props) {\n  const [redir, setRedir] = useState(<div/>);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n    const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  const CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        \n        iconColor: '#0275d8',\n        color: 'black',\n        fontWeight: 500,\n        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n        fontSize: '18px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {color: '#fce883'},\n        '::placeholder': {color: '#0275d8'},\n      },\n      invalid: {\n        iconColor: '#d9534f',\n        color: '#d9534f',\n      },\n    },\n  };\n  \n  if(props.token){\n    \n  }\n\n  return (\n       <form onSubmit={handleSubmit}>\n         <p style={{fontSize: 18, color: '#0275d8'}}>Name</p>\n         <input type='text' onChange={(e)=>setUsername(e.target.value)} value={username}/>\n         <p style={{fontSize: 18, color: '#0275d8', paddingTop: 5}}>Email</p>\n         <input type='text' onChange={(e)=>setEmail(e.target.value)} value={email}/>\n       <CardElement options={CARD_OPTIONS}/>\n        <Button type=\"submit\" color='primary' disabled={!stripe}>\n            Pay\n        </Button>\n        <p style={{fontSize:13, cursor: 'pointer', color:'#0275d8', marginTop: 20}} onClick={()=>setRedir(<Redirect to='/sign'/>)}>Sign in/ Sign up here</p>\n        {redir}\n        </form>\n\n  );\n};\n\nfunction Pay(props) {\n  return (\n    <Elements stripe={stripePromise}>\n      <Checkout token={props.token}/>\n    </Elements>\n  );\n}\n\nfunction mapStateToProps(state){\n  return {token: state.token}\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Pay);"]},"metadata":{},"sourceType":"module"}